theme = "max_monokai_pro_spectrum_no_diagnostic"
# theme = "catppuccin_latte"

[editor]
cursorline = true
mouse = true
true-color = true
scrolloff = 17 
auto-format = true
# line-number = "relative"
auto-save = true
gutters = ["diff","diagnostics", "line-numbers", "spacer"]
# gutters = ["diff","diagnostics", "spacer"]
jump-label-alphabet = "fjdklavmceiruwotybns;"
completion-timeout = 0
completion-trigger-len = 1
auto-pairs = false

[editor.inline-diagnostics]
# cursor-line = "hint"
cursor-line = "disable"

[editor.smart-tab]
enable = true

# [editor.auto-pairs]
# '(' = ')'
# '{' = '}'
# '[' = ']'
# '"' = '"'
# '`' = '`'
# '<' = '>'

[editor.soft-wrap]
enable = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false
# ignore = false
git-ignore = false
# git-global = false
git-exclude = false

[editor.indent-guides]
render = true

[editor.statusline]
right = [ "position", "position-percentage", "total-line-numbers", "selections"]
center = [ "file-name", "separator", "version-control" ]
left = [ "mode", "spinner", "diagnostics" ]
mode.insert = "INSERT"
mode.normal = "NORMAL"
mode.select = "SELECT"
separator = " â”‚ "

[keys.normal]
C-y = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %{buffer_name} --chooser-file=/tmp/unique-file',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
  ':set mouse false',
  ':set mouse true',
]
esc = ["collapse_selection", "keep_primary_selection"]
C-f = ["select_mode", "goto_line_end","extend_line_below", "delete_selection", "paste_after"]
C-d = ["select_mode", "goto_line_end","extend_line_below", "delete_selection", "move_line_up", "paste_before"]
C-s = ["normal_mode", ":w!" ] # Save file
f = "buffer_picker"
F = "@ /%p <C-r>% %n "  # Open string search on current buffer (with relative path)
"C-/" = "@miw y /<C-r>+"  # Global search word under cursor
s = "goto_word"
W =  "@miW" # Select Whole word under cursor
w =  "@miw" # Select word under cursor
X = "select_line_above"
x = "select_line_below" 
C-t = ":toggle file-picker.git-ignore"
C-q = ":buffer-close!"
"C-a" = ["toggle_comments", "move_line_down"]
"C-;" = "flip_selections"
"C-," = "remove_primary_selection"
d = "delete_selection_noyank"
c = "change_selection_noyank"
D = "copy_selection_on_prev_line"
t = "expand_selection"
T = "shrink_selection"
J = "@15zj" # Scroll down
K = "@15zk" # Scroll up
C-j = "@15zj" # Scroll down
C-k = "@15zk" # Scroll up
C-l = ["normal_mode", "jump_view_right"]
C-h = ["normal_mode", "jump_view_left"]
C-r = "@:reload-all<ret>"
A-q = ":wqa!"

[keys.normal.space]
z = "@\"%p\"+yd" # Copy buffer (repository relative) path in clipboard  
Z = "@o<esc>|pwd<ret>;i/<esc>\"%PmiW\"+yddk" # Copy buffer full-path in clipboard  
space = "save_selection"
x = "join_selections"

[keys.normal.m]
f = "select_regex"
F = "split_selection"

[keys.select.m]
f = "select_regex"
F = "split_selection"

[keys.select]
C-f = ["goto_line_end", "extend_line_below", "delete_selection", "paste_after", "select_mode" ]
C-d = ["goto_line_end", "extend_line_below", "delete_selection", "move_line_up", "paste_before", "select_mode"]
C-s = ["normal_mode", ":w!"] # Save file
X = "select_line_above"
x = "select_line_below"
"C-;" = "flip_selections"
d = "delete_selection_noyank"
c = "change_selection_noyank"
W =  "@miW" # Select Whole word under cursor
w =  "@miw" # Select word under cursor
s = "extend_to_word"
C-l = ["normal_mode", "jump_view_right"]
C-h = ["normal_mode", "jump_view_left"]

[keys.insert]
A-q = ["normal_mode", ":wqa!"]
C-s = ["normal_mode", ":w"] 
C-l = ["normal_mode", "jump_view_right"]
C-h = ["normal_mode", "jump_view_left"]

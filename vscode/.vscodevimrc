set nohlsearch
set incsearch
set ignorecase
set smartcase
set clipboard+=unnamed

" set <leader> to <space>
" let mapleader = " "

" Remap d to delete without yanking (using black hole register)
nnoremap d "_d
vnoremap d "_d
" Remap x to delete without yanking (using black hole register)
nnoremap x "_x
vnoremap x "_x

" Remap c to delete without yanking (using black hole register)
nnoremap c "_c
vnoremap c "_c

" Map U to redo (Ctrl-r)
nnoremap U <C-r>
vnoremap U <C-r>

noremap gl g_
noremap gh ^
noremap ge G
nnoremap ga ggvG

" map V in Visual-Line to j for better navigation
vnoremap V j
vnoremap v k
nnoremap <leader>v V

" Easier macros repetition
nnoremap Q @q

" Remap easymotion word start
nnoremap f <leader><leader>s
vnoremap f <leader><leader>s
nnoremap s <leader><leader><leader>bdw
vnoremap s <leader><leader><leader>bdw

nnoremap <C-j> 17<C-e>
nnoremap <C-k> 17<C-y>

" Map new line
nnoremap <leader>j o<ESC>k
nnoremap <leader>k O<ESC>j

"  to clipboard
vnoremap <leader>y  "+y
nnoremap <leader>Y  "+yg_
nnoremap <leader>y  "+y
nnoremap <leader>yy  "+yy

" Paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P

" Remap Hover
nnoremap <leader>, gh

" Surround
" Add desired surround around text defined by <motion>
"   y s <motion> <desired>
" Delete existing surround
"   d s <existing>
" Change existing surround to desired
"   c s <existing> <desired>
" Surround when in visual modes (surrounds full selection)
"   S <desired>
